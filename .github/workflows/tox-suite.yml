name: Tox Testing Suite

on:
  - push
  - pull_request

jobs:
  test-tox:
    outputs:
      dir: ${{ steps.pip-cache.outputs.dir }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]
        exclude:
          - platform: windows-latest
            python-version: pypy3

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/tox.ini') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Tox cache
        uses: actions/cache@v2
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ hashFiles('**/tox.ini') }}
          restore-keys: ${{ runner.os }}-tox-

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install poetry in MAC or UNIX
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        if: matrix.platform == 'ubuntu-latest' ||  matrix.platform == 'macos-latest'

      - name: Install poetry in Windows
        run: (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -
        if: matrix.platform == 'windows-latest'

      - name: Test with tox
        run: make tests

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-data
          path: .coverage/

  coverage:
    needs: test-tox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v2

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.test-tox.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/tox.ini') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install tox tox-gh-actions poetry

      - uses: actions/download-artifact@v2
        with:
          name: coverage-data
          path: .coverage/

      - name: Coverage
        run: poetry run tox -e report

      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v2.7.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.TEST_REPORTER_ID }}
        with:
          coverageLocations: .coverage/coverage.xml:coverage.py

      - name: Publish Package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_PASSWORD }}
