[tox]
minversion = 3.3.0
isolated_build = true
envlist =
    clean
    py{36,37,38,39}
    pypy3
    # py39
    report


[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    pypy3: pypy3


[testenv]
whitelist_externals = poetry
passenv =
    GITHUB_*

setenv =
    DOCTEST_COVERAGE = -p --context="doctest-{envname}"
    PYTEST_COVERAGE = -p --context="pytest-{envname}"
    VIRTUAL_ENV = {envpython}

commands =
    poetry install -v --no-root -E tests
    poetry run coverage run {env:PYTEST_COVERAGE} \
        --source="{envsitepackagesdir}/generic_lexer" \
        -m pytest
    poetry run coverage run {env:DOCTEST_COVERAGE} \
        --source="src/generic_lexer" \
        -m sphinx \
        -d {toxworkdir}/.docs/cache \
        -b doctest docs \
        {toxworkdir}/.docs/build


[testenv:pypy3]
whitelist_externals = poetry
skip_install = true

setenv =
    {[testenv]setenv}

commands =
    poetry install -v -E tests
    poetry run coverage run {env:PYTEST_COVERAGE} \
        --source="{envsitepackagesdir}/generic_lexer" \
        -m pytest
    poetry run coverage run {env:DOCTEST_COVERAGE} \
        --source="src/generic_lexer" \
        -m sphinx \
        -d {toxworkdir}/.docs/cache \
        -b doctest docs \
        {toxworkdir}/.docs/build

[testenv:clean]
whitelist_externals = poetry
skip_install = true
commands =
    # echo {env:VIRTUAL_ENV}
    poetry run coverage erase


[testenv:report]
whitelist_externals = poetry
depends = py{36,37,38,39}, pypy3
skip_install = true

commands =
    poetry run coverage combine
    poetry run coverage report -i
    poetry run coverage html -i
    poetry run coverage xml -i


[pytest]
log_cli = True


[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    if self\.debug
    if DEBUG

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:


[coverage:run]
data_file = .coverage/.coverage


[coverage:html]
directory = .coverage/html
show_contexts = true


[coverage:xml]
output = .coverage/coverage.xml


[coverage:paths]
source =
    src/generic_lexer
    */site-packages/generic_lexer
